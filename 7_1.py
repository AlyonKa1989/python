# Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора класса (метод
# __init__()), который должен принимать данные (список списков) для формирования матрицы.
# Следующий шаг — реализовать перегрузку метода __str__() для вывода матрицы в
# привычном виде.
# реализовать перегрузку метода __add__() для реализации операции сложения двух
# объектов класса Matrix (двух матриц). Результатом сложения должна быть новая матрица.
# Подсказка: сложение элементов матриц выполнять поэлементно — первый элемент первой
# строки первой матрицы складываем с первым элементом первой строки второй матрицы и т.д.


class Matrix(object):
    def __init__(self, matrix):
        self.matrix = matrix
        self.m1, self.m2 = 0, 0

    def __str__(self):
        return '\n'.join([''.join(['%d\t' % i for i in x]) for x in self.matrix])

    def __len__(self):
        return len(self.matrix)

    def __add__(self, other):
        n = self.matrix.__len__()
        a = self.matrix
        b = other.matrix
        c = a
        for i in range(n):
            for j in range(n):
                c[i][j] = a[i][j] + b[i][j]
        return '\n'.join([''.join(['%d\t' % i for i in x]) for x in c])


m1 = Matrix([[3, 2, 1], [-1, -2, -3], [5, 7, 8]])
m2 = Matrix([[1, 2, 3], [5, -3, 1], [3, 3, 1]])

print("Матрица 1:", "\n", m1, "\n", "\n", "Матрица 2:", "\n", m2, "\n")
print(F"Сумму матриц:\n {m1 + m2}")
